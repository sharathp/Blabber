apply plugin: 'com.android.application'

apply plugin: 'android-apt'

apply plugin: 'me.tatarka.retrolambda'

ext {
    APPCOMPAT_VERSION = "24.1.1"
    JUNIT_VERSION = "4.12"
    ASYNC_HTTP_VERSION = "1.4.9"
    GLIDE_VERSION = "3.7.0"
    BUTTERKNIFE_VERSION = "8.2.1"
    GSON_VERSION = "2.7"
    DAGGER_VERSION = "2.4"
    JAVA_POET_VERSION = "1.7.0"
    PARCELER_VERSION = "1.1.5"
    SQUIDB_VERSION = "3.0.0"
    STETHO_VERSION = "1.3.1"
    OAUTH_HANDLER_VERSION = "1.0.0"
    EVENT_BUS_VERSION = "3.0.0"
    GLIDE_TRANSFORMATIONS_VERSION = "2.0.1"
    CALLIGRAPHY_VERSION = "2.2.0"
    FENSTER_VERSION = "0.0.2"
}

apt {
    arguments {
        squidbOptions 'androidModels'
    }
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    dataBinding.enabled = true

    defaultConfig {
        applicationId "com.sharathp.blabber"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'TWITTER_API_KEY', getString('TwitterApiKey')
        it.buildConfigField 'String', 'TWITTER_API_SECRET', getString('TwitterApiSecret')
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile("com.codepath.libraries:android-oauth-handler:$OAUTH_HANDLER_VERSION@aar") {
        transitive = true
    }

    compile "com.android.support:appcompat-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:recyclerview-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:cardview-v7:$APPCOMPAT_VERSION"
    compile "com.android.support:percent:$APPCOMPAT_VERSION"
    compile "com.android.support:design:$APPCOMPAT_VERSION"
    compile "com.android.support:support-v4:$APPCOMPAT_VERSION"

    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"

    compile "com.loopj.android:android-async-http:$ASYNC_HTTP_VERSION"

    apt "org.parceler:parceler:$PARCELER_VERSION"
    compile "org.parceler:parceler-api:$PARCELER_VERSION"

    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    compile "com.google.code.gson:gson:$GSON_VERSION"

    compile "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    compile "jp.wasabeef:glide-transformations:$GLIDE_TRANSFORMATIONS_VERSION"

    compile "uk.co.chrisjenx:calligraphy:$CALLIGRAPHY_VERSION"

    compile "com.malmstein:fenster:$FENSTER_VERSION"

    // squidb
    compile "com.yahoo.squidb:squidb:$SQUIDB_VERSION"
    compile "com.yahoo.squidb:squidb-android:$SQUIDB_VERSION"
    compile "com.yahoo.squidb:squidb-annotations:$SQUIDB_VERSION"
    compile "com.yahoo.squidb:squidb-reactive:$SQUIDB_VERSION"
    apt "com.yahoo.squidb:squidb-processor:$SQUIDB_VERSION"
    compile "com.yahoo.squidb:squidb-recyclerview:$SQUIDB_VERSION"
    compile "com.yahoo.squidb:squidb-support-loader:$SQUIDB_VERSION"

    compile "org.greenrobot:eventbus:$EVENT_BUS_VERSION"

    compile "com.facebook.stetho:stetho:$STETHO_VERSION"

    testCompile "junit:junit:$JUNIT_VERSION"
}

def getString(String keyName){
    def Properties props = new Properties()
    props.load(project.rootProject.file('local.properties').newDataInputStream())
    return props[keyName]
}